from PyQt5.QtWidgets import (
    QApplication, QMainWindow, QVBoxLayout, QHBoxLayout, QPushButton, 
    QLabel, QLineEdit, QWidget, QMessageBox, QStackedWidget, QGridLayout,
    QFrame, QInputDialog, QDialog
)
from PyQt5.QtGui import QPixmap, QTransform, QFont
from PyQt5.QtCore import Qt, QTimer
import random

class VictoryDialog(QDialog):
    def __init__(self, score, parent=None):
        super().__init__(parent)
        self.setWindowTitle("–ü–æ–±–µ–¥–∞!")
        self.setFixedSize(400, 300)
        
        self.setStyleSheet("""
            QDialog {
                background-color: #e8d5c4;
            }
            QLabel {
                color: #2d3436;
                font-size: 18px;
                font-weight: bold;
                text-shadow: 1px 1px 2px #ffffff;
            }
            QPushButton {
                font-size: 16px;
                padding: 10px 15px;
                border-radius: 10px;
                color: #2d3436;
                min-width: 130px;
                margin: 5px;
                background-color: #eed6c4;
                border: 2px solid #9e7676;
            }
            QPushButton:hover {
                background-color: #ffd6c4;
                border-color: #815b5b;
            }
        """)

        layout = QVBoxLayout()
        layout.setContentsMargins(20, 20, 20, 20)  # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç—Å—Ç—É–ø—ã –æ—Ç –∫—Ä–∞–µ–≤ –æ–∫–Ω–∞

        # –¢–µ–∫—Å—Ç –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è
        congrats_label = QLabel("üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! üéâ\n–í—ã –ø–æ–±–µ–¥–∏–ª–∏!")
        congrats_label.setAlignment(Qt.AlignCenter)
        layout.addWidget(congrats_label)

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞–±—Ä–∞–Ω–Ω—ã–µ –æ—á–∫–∏
        score_label = QLabel(f"–í–∞—à–∏ –æ—á–∫–∏: {score}")
        score_label.setAlignment(Qt.AlignCenter)
        layout.addWidget(score_label)

        # –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∫–Ω–æ–ø–æ–∫
        button_layout = QHBoxLayout()
        button_layout.setAlignment(Qt.AlignCenter)
        button_layout.setSpacing(15)  # –£–º–µ–Ω—å—à–∞–µ–º –æ—Ç—Å—Ç—É–ø –º–µ–∂–¥—É –∫–Ω–æ–ø–∫–∞–º–∏
        button_layout.setContentsMargins(0, 0, 0, 0)  # –£–±–∏—Ä–∞–µ–º –æ—Ç—Å—Ç—É–ø—ã —É –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –∫–Ω–æ–ø–æ–∫

        # –ö–Ω–æ–ø–∫–∞ "–ò–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞"
        play_again_btn = QPushButton("–ò–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞")
        play_again_btn.setFixedWidth(150)  # –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —à–∏—Ä–∏–Ω–∞ –∫–Ω–æ–ø–∫–∏
        play_again_btn.setObjectName("play_again")
        play_again_btn.clicked.connect(self.accept)
        button_layout.addWidget(play_again_btn)

        # –ö–Ω–æ–ø–∫–∞ "–í—ã–π—Ç–∏ –∏–∑ –∏–≥—Ä—ã"
        exit_btn = QPushButton("–í—ã–π—Ç–∏ –∏–∑ –∏–≥—Ä—ã")
        exit_btn.setFixedWidth(150)  # –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —à–∏—Ä–∏–Ω–∞ –∫–Ω–æ–ø–∫–∏
        exit_btn.setObjectName("exit_game")
        exit_btn.clicked.connect(self.reject)
        button_layout.addWidget(exit_btn)

        layout.addLayout(button_layout)
        self.setLayout(layout)

class PoleChudesGame(QMainWindow):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("–ü–æ–ª–µ –ß—É–¥–µ—Å")
        self.setGeometry(100, 100, 800, 600)

        # –°–ª–æ–≤–∞ –∏ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —É—Ä–æ–≤–Ω–µ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
        self.words_with_questions = {
            "–õ–µ–≥–∫–∏–π": [
                {"word": "–ö–û–î", "question": "–ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –¥–ª—è –∫–æ–º–ø—å—é—Ç–µ—Ä–∞"},
                {"word": "–ë–ò–¢", "question": "–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –µ–¥–∏–Ω–∏—Ü–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏"},
                {"word": "–ß–ê–¢", "question": "–û–Ω–ª–∞–π–Ω-–æ–±—â–µ–Ω–∏–µ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏"},
                {"word": "–°–ê–ô–¢", "question": "–í–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü–∞ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ"},
                {"word": "–¢–ï–ì", "question": "–≠–ª–µ–º–µ–Ω—Ç —Ä–∞–∑–º–µ—Ç–∫–∏ –≤ HTML"},
                {"word": "–õ–ò–ù–ö", "question": "–°—Å—ã–ª–∫–∞ –Ω–∞ –¥—Ä—É–≥—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É"},
                {"word": "–ë–ê–ì", "question": "–û—à–∏–±–∫–∞ –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ"},
                {"word": "–§–ê–ô–õ", "question": "–ï–¥–∏–Ω–∏—Ü–∞ —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–µ"},
                {"word": "–ü–û–†–¢", "question": "–¢–æ—á–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –≤ —Å–µ—Ç–∏"},
                {"word": "–õ–û–ì", "question": "–ñ—É—Ä–Ω–∞–ª —Å–æ–±—ã—Ç–∏–π —Å–∏—Å—Ç–µ–º—ã"},
                {"word": "–ö–õ–ò–ö", "question": "–ù–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ –º—ã—à–∏"},
                {"word": "–Æ–ó–ï–†", "question": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–∏—Å—Ç–µ–º—ã"},
                {"word": "–ü–ò–ù", "question": "–ö–æ–¥ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∏–ª–∏ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏"},
                {"word": "–ë–ò–¢–´", "question": "–ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã—Ö –µ–¥–∏–Ω–∏—Ü –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏"},
                {"word": "–•–≠–®", "question": "–†–µ–∑—É–ª—å—Ç–∞—Ç —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö"}
            ],
            "–°—Ä–µ–¥–Ω–∏–π": [
                {"word": "–ü–ò–¢–û–ù", "question": "–ü–æ–ø—É–ª—è—Ä–Ω—ã–π —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è —Å —Å–∏–º–≤–æ–ª–æ–º –∑–º–µ–∏"},
                {"word": "–°–ï–†–í–ï–†", "question": "–ö–æ–º–ø—å—é—Ç–µ—Ä, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—â–∏–π —Ä–µ—Å—É—Ä—Å—ã –ø–æ —Å–µ—Ç–∏"},
                {"word": "–ë–†–ê–£–ó–ï–†", "question": "–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü"},
                {"word": "–ê–õ–ì–û–†–ò–¢–ú", "question": "–ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —à–∞–≥–æ–≤ –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á–∏"},
                {"word": "–ü–†–û–¢–û–ö–û–õ", "question": "–ù–∞–±–æ—Ä –ø—Ä–∞–≤–∏–ª –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –¥–∞–Ω–Ω—ã—Ö"},
                {"word": "–ö–õ–ê–í–ò–®–ê", "question": "–≠–ª–µ–º–µ–Ω—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã"},
                {"word": "–ü–ê–ö–ï–¢", "question": "–ï–¥–∏–Ω–∏—Ü–∞ –ø–µ—Ä–µ–¥–∞—á–∏ –¥–∞–Ω–Ω—ã—Ö –≤ —Å–µ—Ç–∏"},
                {"word": "–°–û–ö–ï–¢", "question": "–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –æ–±–º–µ–Ω–∞ –¥–∞–Ω–Ω—ã–º–∏ –º–µ–∂–¥—É –ø—Ä–æ—Ü–µ—Å—Å–∞–º–∏"},
                {"word": "–û–ü–ï–†–ê–¶–ò–Ø", "question": "–î–µ–π—Å—Ç–≤–∏–µ, –≤—ã–ø–æ–ª–Ω—è–µ–º–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–æ–π"},
                {"word": "–ü–ê–†–û–õ–¨", "question": "–°–µ–∫—Ä–µ—Ç–Ω—ã–π –Ω–∞–±–æ—Ä —Å–∏–º–≤–æ–ª–æ–≤ –¥–ª—è –≤—Ö–æ–¥–∞"},
                {"word": "–ú–û–î–£–õ–¨", "question": "–ß–∞—Å—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—ã, –≤—ã–ø–æ–ª–Ω—è—é—â–∞—è –æ—Ç–¥–µ–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é"},
                {"word": "–ü–ê–ú–Ø–¢–¨", "question": "–†–µ—Å—É—Ä—Å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ –∫–æ–º–ø—å—é—Ç–µ—Ä–µ"},
                {"word": "–°–ï–¢–¨", "question": "–û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –∫–æ–º–ø—å—é—Ç–µ—Ä–æ–≤ –¥–ª—è –æ–±–º–µ–Ω–∞ –¥–∞–Ω–Ω—ã–º–∏"},
                {"word": "–î–ò–°–ö", "question": "–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏"},
                {"word": "–ö–õ–ê–°–°", "question": "–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –æ–±—ä–µ–∫—Ç–Ω–æ-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–∏"}
            ],
            "–°–ª–æ–∂–Ω—ã–π": [
                {"word": "–ü–†–û–ì–†–ê–ú–ú–ò–°–¢", "question": "–ß–µ–ª–æ–≤–µ–∫, –∫–æ—Ç–æ—Ä—ã–π –ø–∏—à–µ—Ç –∫–æ–¥"},
                {"word": "–ò–ù–¢–ï–†–§–ï–ô–°", "question": "–°–ø–æ—Å–æ–± –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –ø—Ä–æ–≥—Ä–∞–º–º–æ–π"},
                {"word": "–ë–ê–ó–ê–î–ê–ù–ù–´–•", "question": "–û—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏"},
                {"word": "–í–ò–†–¢–£–ê–õ–ò–ó–ê–¶–ò–Ø", "question": "–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤"},
                {"word": "–ò–ù–ö–ê–ü–°–£–õ–Ø–¶–ò–Ø", "question": "–°–æ–∫—Ä—ã—Ç–∏–µ –¥–µ—Ç–∞–ª–µ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –≤ –û–û–ü"},
                {"word": "–ü–û–õ–ò–ú–û–†–§–ò–ó–ú", "question": "–°–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –æ–±—ä–µ–∫—Ç–∞ –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Ä–∞–∑–Ω—ã–µ —Ñ–æ—Ä–º—ã"},
                {"word": "–†–ï–§–ê–ö–¢–û–†–ò–ù–ì", "question": "–ü—Ä–æ—Ü–µ—Å—Å —É–ª—É—á—à–µ–Ω–∏—è –∫–æ–¥–∞ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞"},
                {"word": "–î–ï–ë–ê–ì–ì–ò–ù–ì", "question": "–ü—Ä–æ—Ü–µ—Å—Å –ø–æ–∏—Å–∫–∞ –∏ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –æ—à–∏–±–æ–∫"},
                {"word": "–ö–û–ù–°–¢–†–£–ö–¢–û–†", "question": "–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞"},
                {"word": "–ò–ù–¢–ï–†–ü–†–ï–¢–ê–¢–û–†", "question": "–ü—Ä–æ–≥—Ä–∞–º–º–∞, –≤—ã–ø–æ–ª–Ω—è—é—â–∞—è –∫–æ–¥ –ø–æ—Å—Ç—Ä–æ—á–Ω–æ"},
                {"word": "–ö–û–ú–ü–ò–õ–Ø–¢–û–†", "question": "–ü—Ä–æ–≥—Ä–∞–º–º–∞, –ø–µ—Ä–µ–≤–æ–¥—è—â–∞—è –∫–æ–¥ –≤ –º–∞—à–∏–Ω–Ω—ã–π —è–∑—ã–∫"},
                {"word": "–ú–£–õ–¨–¢–ò–ó–ê–î–ê–ß–ù–û–°–¢–¨", "question": "–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∑–∞–¥–∞—á –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ"},
                {"word": "–°–ï–†–ò–ê–õ–ò–ó–ê–¶–ò–Ø", "question": "–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –≤ –ø–æ—Ç–æ–∫ –±–∞–π—Ç–æ–≤"},
                {"word": "–î–ï–°–°–ï–†–ò–ê–õ–ò–ó–ê–¶–ò–Ø", "question": "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –∏–∑ –ø–æ—Ç–æ–∫–∞ –±–∞–π—Ç–æ–≤"},
                {"word": "–ö–ò–ë–ï–†–ë–ï–ó–û–ü–ê–°–ù–û–°–¢–¨", "question": "–ó–∞—â–∏—Ç–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏ —Å–∏—Å—Ç–µ–º –æ—Ç –∞—Ç–∞–∫"}
            ]
        }
        
        # –¢–µ–∫—É—â–∏–µ –∏–≥—Ä–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        self.current_word_data = None
        self.hidden_word = ""
        self.guessed_word = []
        
        # –°–µ–∫—Ç–æ—Ä–∞ –±–∞—Ä–∞–±–∞–Ω–∞
        self.sectors = {
            "–õ–µ–≥–∫–∏–π": ["+100", "+200", "+300", "+500", "–ü—Ä–∏–∑", "+400"],
            "–°—Ä–µ–¥–Ω–∏–π": ["+200", "+400", "+600", "+800", "–ë–∞–Ω–∫—Ä–æ—Ç", "+1000"],
            "–°–ª–æ–∂–Ω—ã–π": ["+300", "+600", "+900", "+1200", "–ë–∞–Ω–∫—Ä–æ—Ç", "+1500"]
        }
        
        # –û—á–∫–∏ –∏–≥—Ä–æ–∫–∞ –∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã
        self.total_score = 0
        self.difficulty = None
        self.current_spin_result = None
        self.can_guess = False
        self.current_potential_score = 0

        # –¢–∞–π–º–µ—Ä –¥–ª—è –≤—Ä–∞—â–µ–Ω–∏—è –±–∞—Ä–∞–±–∞–Ω–∞
        self.spin_timer = QTimer()
        self.spin_angle = 0
        self.spin_timer.timeout.connect(self.update_wheel_rotation)

        # –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        self.init_ui()

    def init_ui(self):
        self.stacked_widget = QStackedWidget()
        self.setCentralWidget(self.stacked_widget)

        # –ó–∞–≥—Ä—É–∑–æ—á–Ω—ã–π —ç–∫—Ä–∞–Ω —Å –≤—ã–±–æ—Ä–æ–º —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
        self.create_start_screen()
        
        # –≠–∫—Ä–∞–Ω –∏–≥—Ä—ã
        self.create_game_screen()

    def create_start_screen(self):
        start_widget = QWidget()
        layout = QVBoxLayout()
        start_widget.setLayout(layout)

        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ñ–æ–Ω–æ–≤–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —á–µ—Ä–µ–∑ —Å—Ç–∏–ª—å
        start_widget.setStyleSheet("""
            background-image: url('background.jpg'); 
            background-repeat: no-repeat; 
            background-position: center; 
            background-size: cover;
        """)

        # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        welcome_label = QLabel("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–≥—Ä—É '–ü–æ–ª–µ –ß—É–¥–µ—Å'!")
        welcome_label.setAlignment(Qt.AlignCenter)
        welcome_label.setStyleSheet("""
            font-size: 24px; 
            font-weight: bold; 
            color: #2d3436;
            margin-bottom: 30px;
            text-shadow: 1px 1px 2px #ffffff;
        """)
        welcome_label.setFont(QFont("Arial", 24, QFont.Bold))
        layout.addWidget(welcome_label)

        # –í—ã–±–æ—Ä —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
        difficulty_label = QLabel("–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏:")
        difficulty_label.setAlignment(Qt.AlignCenter)
        difficulty_label.setStyleSheet("""
            font-size: 18px; 
            font-weight: bold; 
            color: #2d3436;
            margin-bottom: 20px;
            text-shadow: 1px 1px 2px #ffffff;
        """)
        layout.addWidget(difficulty_label)

        # –ö–Ω–æ–ø–∫–∏ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
        button_style = """
            QPushButton {
                font-size: 16px; 
                padding: 12px; 
                margin: 8px 120px; 
                border-radius: 10px; 
                background-color: #e8d5c4; 
                color: #2d3436;
                min-width: 200px;
                border: 2px solid #9e7676;
            }
            QPushButton:hover {
                background-color: #eed6c4;
                border-color: #815b5b;
            }
        """

        easy_btn = QPushButton("–õ–µ–≥–∫–∏–π")
        medium_btn = QPushButton("–°—Ä–µ–¥–Ω–∏–π")
        hard_btn = QPushButton("–°–ª–æ–∂–Ω—ã–π")

        for btn in [easy_btn, medium_btn, hard_btn]:
            btn.setStyleSheet(button_style)
            btn.setFont(QFont("Arial", 12, QFont.Bold))
            layout.addWidget(btn)

        easy_btn.clicked.connect(lambda: self.start_game("–õ–µ–≥–∫–∏–π"))
        medium_btn.clicked.connect(lambda: self.start_game("–°—Ä–µ–¥–Ω–∏–π"))
        hard_btn.clicked.connect(lambda: self.start_game("–°–ª–æ–∂–Ω—ã–π"))

        self.stacked_widget.addWidget(start_widget)

    def create_game_screen(self):
        game_widget = QWidget()
        game_layout = QVBoxLayout()
        game_widget.setLayout(game_layout)

        game_widget.setStyleSheet("""
            background-image: url('background.jpg'); 
            background-repeat: no-repeat; 
            background-position: center; 
            background-size: cover;
        """)

        # –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –≤–æ–ø—Ä–æ—Å–∞
        question_frame = QFrame()
        question_frame.setStyleSheet("""
            QFrame {
                background-color: rgba(232, 213, 196, 180);
                border-radius: 15px;
                padding: 15px;
                border: 2px solid #9e7676;
            }
        """)
        question_layout = QVBoxLayout(question_frame)
        
        # –ú–µ—Ç–∫–∞ –¥–ª—è –≤–æ–ø—Ä–æ—Å–∞
        self.question_label = QLabel()
        self.question_label.setAlignment(Qt.AlignCenter)
        self.question_label.setStyleSheet("""
            font-size: 20px; 
            font-weight: bold; 
            color: #2d3436;
            margin-bottom: 10px;
            text-shadow: 1px 1px 2px #ffffff;
        """)
        self.question_label.setFont(QFont("Arial", 14, QFont.Bold))
        question_layout.addWidget(self.question_label)
        
        # –ü–æ–ª–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —É–≥–∞–¥–∞–Ω–Ω—ã—Ö –±—É–∫–≤
        self.letters_frame = QFrame()
        self.letters_frame.setStyleSheet("""
            QFrame {
                background-color: rgba(238, 214, 196, 100);
                border-radius: 10px;
                padding: 10px;
                border: 2px solid #9e7676;
            }
        """)
        self.letters_layout = QHBoxLayout(self.letters_frame)
        self.letters_layout.setAlignment(Qt.AlignCenter)
        self.letters_layout.setSpacing(10)
        
        question_layout.addWidget(self.letters_frame)
        game_layout.addWidget(question_frame)

        # –ë–∞—Ä–∞–±–∞–Ω
        self.wheel_label = QLabel()
        wheel_pixmap = QPixmap("wheel.jpg")
        self.wheel_pixmap = wheel_pixmap.scaled(300, 300, Qt.KeepAspectRatio, Qt.SmoothTransformation)
        self.wheel_label.setPixmap(self.wheel_pixmap)
        self.wheel_label.setFixedSize(300, 300)
        self.wheel_label.setAlignment(Qt.AlignCenter)
        game_layout.addWidget(self.wheel_label, alignment=Qt.AlignCenter)

        # –°—á–µ—Ç
        self.score_label = QLabel(f"–û—á–∫–∏: {self.total_score}")
        self.score_label.setAlignment(Qt.AlignCenter)
        self.score_label.setStyleSheet("""
            font-size: 20px; 
            font-weight: bold; 
            color: #2d3436;
            margin-top: 10px;
            text-shadow: 1px 1px 2px #ffffff;
        """)
        game_layout.addWidget(self.score_label)

        # –ö–Ω–æ–ø–∫–∞ –≤—Ä–∞—â–µ–Ω–∏—è –±–∞—Ä–∞–±–∞–Ω–∞
        self.spin_button = QPushButton("–í—Ä–∞—â–∞—Ç—å –±–∞—Ä–∞–±–∞–Ω")
        self.spin_button.setStyleSheet("""
            QPushButton {
                font-size: 18px; 
                padding: 12px; 
                border-radius: 10px; 
                background-color: #e8d5c4; 
                color: #2d3436;
                min-width: 200px;
                border: 2px solid #9e7676;
            }
            QPushButton:hover {
                background-color: #eed6c4;
                border-color: #815b5b;
            }
            QPushButton:disabled {
                background-color: rgba(232, 213, 196, 100);
                color: #95a5a6;
                border-color: #95a5a6;
            }
        """)
        self.spin_button.setFont(QFont("Arial", 12, QFont.Bold))
        self.spin_button.clicked.connect(self.start_wheel_spin)
        game_layout.addWidget(self.spin_button, alignment=Qt.AlignCenter)

        # –ü–æ–ª–µ –≤–≤–æ–¥–∞ –±—É–∫–≤—ã
        self.input_field = QLineEdit()
        self.input_field.setMaxLength(1)
        self.input_field.setPlaceholderText("–í–≤–µ–¥–∏—Ç–µ –±—É–∫–≤—É")
        self.input_field.setStyleSheet("""
            QLineEdit {
                font-size: 18px; 
                padding: 10px; 
                border-radius: 10px; 
                background-color: #eed6c4;
                color: #2d3436;
                border: 2px solid #9e7676;
            }
            QLineEdit:disabled {
                background-color: rgba(238, 214, 196, 100);
                color: #95a5a6;
                border-color: #95a5a6;
            }
        """)

        # –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
        button_style = """
            QPushButton {
                font-size: 16px; 
                padding: 10px; 
                border-radius: 10px; 
                background-color: #e8d5c4; 
                color: #2d3436;
                border: 2px solid #9e7676;
            }
            QPushButton:hover {
                background-color: #eed6c4;
                border-color: #815b5b;
            }
            QPushButton:disabled {
                background-color: rgba(232, 213, 196, 100);
                color: #95a5a6;
                border-color: #95a5a6;
            }
        """

        self.submit_button = QPushButton("–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –±—É–∫–≤—É")
        self.submit_button.setStyleSheet(button_style)
        self.submit_button.clicked.connect(self.check_letter)

        self.guess_word_button = QPushButton("–°–∫–∞–∑–∞—Ç—å —Å–ª–æ–≤–æ")
        self.guess_word_button.setStyleSheet(button_style)
        self.guess_word_button.clicked.connect(self.guess_word)

        # –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –≤–≤–æ–¥–∞ –±—É–∫–≤—ã –∏ –∫–Ω–æ–ø–æ–∫
        input_container = QHBoxLayout()
        input_container.setContentsMargins(50, 20, 50, 20)
        input_container.setSpacing(20)
        
        input_container.addWidget(self.input_field)
        input_container.addWidget(self.submit_button)
        input_container.addWidget(self.guess_word_button)

        game_layout.addLayout(input_container)

        # –ú–µ—Ç–∫–∞ –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        self.result_label = QLabel("")
        self.result_label.setAlignment(Qt.AlignCenter)
        self.result_label.setStyleSheet("""
            font-size: 16px; 
            font-weight: bold;
            color: #f39c12;
            margin-top: 10px;
        """)
        game_layout.addWidget(self.result_label)

        self.stacked_widget.addWidget(game_widget)

    def update_letters_display(self):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É–≥–∞–¥–∞–Ω–Ω—ã—Ö –±—É–∫–≤"""
        # –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –±—É–∫–≤—ã
        for i in reversed(range(self.letters_layout.count())): 
            self.letters_layout.itemAt(i).widget().setParent(None)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –±—É–∫–≤—ã
        for letter in self.guessed_word:
            letter_label = QLabel(letter)
            letter_label.setAlignment(Qt.AlignCenter)
            letter_label.setStyleSheet("""
                font-size: 28px; 
                font-weight: bold; 
                color: #2d3436;
                background-color: #eed6c4;
                border-radius: 5px;
                min-width: 40px;
                min-height: 40px;
                padding: 5px;
                border: 2px solid #9e7676;
            """)
            letter_label.setFont(QFont("Arial", 18, QFont.Bold))
            self.letters_layout.addWidget(letter_label)

    def start_game(self, difficulty):
        self.difficulty = difficulty
        # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ —Å–ª–æ–≤–æ –∏ –≤–æ–ø—Ä–æ—Å
        self.current_word_data = random.choice(self.words_with_questions[difficulty])
        self.hidden_word = self.current_word_data["word"]
        self.guessed_word = ["_" for _ in self.hidden_word]
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–æ–ø—Ä–æ—Å
        self.question_label.setText(f"–í–æ–ø—Ä–æ—Å: {self.current_word_data['question']}")
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –±—É–∫–≤
        self.update_letters_display()
        
        self.total_score = 0
        self.current_spin_result = None
        self.current_potential_score = 0
        self.can_guess = False
        self.disable_input_controls()
        self.score_label.setText(f"–û—á–∫–∏: {self.total_score}")
        self.stacked_widget.setCurrentIndex(1)

    def show_victory_dialog(self):
        dialog = VictoryDialog(self.total_score, self)
        result = dialog.exec_()
        
        if result == QDialog.Accepted:
            # –ò–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞ - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –≤—ã–±–æ—Ä—É —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
            self.stacked_widget.setCurrentIndex(0)
            self.reset_game()
        else:
            # –í—ã–π—Ç–∏ –∏–∑ –∏–≥—Ä—ã
            QApplication.quit()

    def guess_word(self):
        if not self.can_guess:
            QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–∫—Ä—É—Ç–∏—Ç–µ –±–∞—Ä–∞–±–∞–Ω!")
            return

        while True:
            word, ok = QInputDialog.getText(
                self, 
                "–£–≥–∞–¥–∞—Ç—å —Å–ª–æ–≤–æ", 
                "–í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–Ω–æ–µ —Å–ª–æ–≤–æ:", 
                QLineEdit.Normal, 
                ""
            )
            
            if not ok:
                return

            if word and word.isalpha():
                break
            else:
                QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–°–ª–æ–≤–æ –¥–æ–ª–∂–Ω–æ —Å–æ—Å—Ç–æ—è—Ç—å —Ç–æ–ª—å–∫–æ –∏–∑ –±—É–∫–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")
        
        if word.upper() == self.hidden_word:
            # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–≥–∞–¥–∞–ª —Å–ª–æ–≤–æ
            self.guessed_word = list(self.hidden_word)
            self.update_letters_display()
            
            # –î–æ–±–∞–≤–ª—è–µ–º –æ—á–∫–∏ –∑–∞ —Ç–µ–∫—É—â–∏–π —Ö–æ–¥ –∏ –±–æ–Ω—É—Å –∑–∞ —É–≥–∞–¥–∞–Ω–Ω–æ–µ —Å–ª–æ–≤–æ
            bonus = len(self.hidden_word) * 300
            total_earned = self.current_potential_score + bonus
            self.total_score += total_earned
            self.score_label.setText(f"–û—á–∫–∏: {self.total_score}")
            
            self.show_victory_dialog()
        else:
            QMessageBox.warning(
                self, 
                "–ù–µ–≤–µ—Ä–Ω–æ", 
                "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —ç—Ç–æ –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Å–ª–æ–≤–æ. –û—á–∫–∏ –Ω–µ –Ω–∞—á–∏—Å–ª—è—é—Ç—Å—è."
            )
            self.disable_input_controls()

    def check_letter(self):
        if not self.can_guess:
            QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–∫—Ä—É—Ç–∏—Ç–µ –±–∞—Ä–∞–±–∞–Ω!")
            return

        letter = self.input_field.text().upper()
        if not letter:
            QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–í–≤–µ–¥–∏—Ç–µ –±—É–∫–≤—É!")
            return

        if not letter.isalpha():
            QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–ú–æ–∂–Ω–æ –≤–≤–æ–¥–∏—Ç—å —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã.")
            self.input_field.clear()
            return

        found = False
        if letter in self.hidden_word:
            for i, char in enumerate(self.hidden_word):
                if char == letter:
                    self.guessed_word[i] = letter
                    found = True
            
            if found:
                self.total_score += self.current_potential_score
                self.update_letters_display()

                if "_" not in self.guessed_word:
                    self.show_victory_dialog()
                else:
                    QMessageBox.information(self, "–ü—Ä–∞–≤–∏–ª—å–Ω–æ!", f"–ë—É–∫–≤–∞ '{letter}' –µ—Å—Ç—å –≤ —Å–ª–æ–≤–µ! –í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ {self.current_potential_score} –æ—á–∫–æ–≤!")
            else:
                QMessageBox.warning(self, "–ù–µ–≤–µ—Ä–Ω–æ", "–í—ã –Ω–µ —É–≥–∞–¥–∞–ª–∏ –±—É–∫–≤—É. –û—á–∫–∏ –Ω–µ –Ω–∞—á–∏—Å–ª—è—é—Ç—Å—è.")
        else:
            QMessageBox.warning(self, "–ù–µ–≤–µ—Ä–Ω–æ", "–¢–∞–∫–æ–π –±—É–∫–≤—ã –Ω–µ—Ç –≤ —Å–ª–æ–≤–µ. –û—á–∫–∏ –Ω–µ –Ω–∞—á–∏—Å–ª—è—é—Ç—Å—è.")

        self.input_field.clear()
        self.disable_input_controls()
        self.score_label.setText(f"–û—á–∫–∏: {self.total_score}")

    def start_wheel_spin(self):
        self.spin_angle = 0
        self.spin_button.setEnabled(False)
        self.result_label.setText("")
        self.spin_timer.start(50)

    def update_wheel_rotation(self):
        self.spin_angle += 30
        transform = QTransform().rotate(self.spin_angle % 360)
        rotated_pixmap = self.wheel_pixmap.transformed(transform, Qt.SmoothTransformation)
        self.wheel_label.setPixmap(rotated_pixmap)

        if self.spin_angle >= 360 * random.randint(2, 4):
            self.spin_timer.stop()
            self.spin_button.setEnabled(True)
            self.finalize_spin()

    def finalize_spin(self):
        self.current_spin_result = random.choice(self.sectors[self.difficulty])
        self.result_label.setText(f"–í—ã–ø–∞–ª–æ: {self.current_spin_result}")

        if self.current_spin_result == "–ë–∞–Ω–∫—Ä–æ—Ç":
            self.total_score = 0
            self.can_guess = False
            QMessageBox.warning(self, "–ë–∞–Ω–∫—Ä–æ—Ç", "–í—ã –ø–æ—Ç–µ—Ä—è–ª–∏ –≤—Å–µ –æ—á–∫–∏!")
            self.disable_input_controls()
        elif self.current_spin_result == "–ü—Ä–∏–∑":
            self.current_potential_score = random.randint(100, 500)
            self.can_guess = True
            self.enable_input_controls()
        else:
            self.current_potential_score = int(self.current_spin_result.strip("+"))
            self.can_guess = True
            self.enable_input_controls()

        self.score_label.setText(f"–û—á–∫–∏: {self.total_score}")

    def enable_input_controls(self):
        self.input_field.setEnabled(True)
        self.submit_button.setEnabled(True)
        self.guess_word_button.setEnabled(True)
        self.spin_button.setEnabled(False)

    def disable_input_controls(self):
        self.input_field.setEnabled(False)
        self.submit_button.setEnabled(False)
        self.guess_word_button.setEnabled(False)
        self.spin_button.setEnabled(True)
        self.current_spin_result = None
        self.current_potential_score = 0

    def reset_game(self):
        self.stacked_widget.setCurrentIndex(0)
        self.current_word_data = None
        self.hidden_word = ""
        self.guessed_word = []
        self.total_score = 0
        self.current_spin_result = None
        self.current_potential_score = 0
        self.can_guess = False
        self.disable_input_controls()
        self.score_label.setText(f"–û—á–∫–∏: {self.total_score}")
        self.update_letters_display()

if __name__ == "__main__":
    app = QApplication([])
    window = PoleChudesGame()
    window.show()
    app.exec_()
